-- TIPOS DE DATOS EN SQL SERVER
INT  -- VALORES NUMÉRICOS SIN DECIMAL.
VARCHAR --VALORES DE CADENA.
NVARCHAR -- VALORES DE CADENA CON CARACTERES ESPECIALES.
DOUBLE -- VALORES CON DECIMALES.
NUMERIC -- VALORES CON DECIMALES (ESTABLECIDOS).
DATE -- VALORES TIPO FECHA.
CHAR -- VALOR DE SOLO 1 CARACTER.
IMAGE -- REGISTRA IMAGENES SERIALIZADAS.
VARBINARY -- PERMITE REGISTRAR DATOS ENCRIPTADOS.
TEXT -- VALORES DE CADENAS GRANDES (HASTA UNA PAGINA HTML)
XML -- VALORES XML.

CREATE DATABASE IDATBD
GO

-- UTILIZAR BASE DE DATOS.
USE IDATBD
GO

--ELIMINAR TABLA USUARIO
DROP TABLE TA_USUARIO
GO

-- CREAR TABLA USUARIOS (COMANDO DE TIPO DDL)
CREATE TABLE TA_USUARIO
(COD_USUARIO INT PRIMARY KEY IDENTITY,
NOM_USUARIO VARCHAR(50),
DNI_USUARIO CHAR(8),
USU_LOGUEO VARCHAR(50),
PAS_LOGUEO  VARBINARY(MAX)
)

--ELIMINAR TABLA ACCESOS
DROP TABLE TA_ACCESOS
GO

--CREAR TABLA ACCESOS
CREATE TABLE TA_ACCESOS
(COD_ACCESO INT PRIMARY KEY IDENTITY,
COD_USUARIO INT,
NOM_ACCESO VARCHAR(50),
FORMULARIO_ACCESO VARCHAR(50),
FOREIGN KEY (COD_USUARIO) REFERENCES TA_USUARIO(COD_USUARIO)
)

-- COMANDO PARA INSERTAR UN REGISTRO (COMANDO DML)
INSERT INTO TA_USUARIO VALUES
(1, 'LUIS', '12345678', 'LCORDOVA', PWDENCRYPT('123'))

-- COMANDO PARA INSERTAR COLUMNAS MENCIONADAS.
INSERT INTO TA_USUARIO (COD_USUARIO, DNI_USUARIO, USU_LOGUEO, PAS_LOGUEO)
VALUES (2, '12345678', 'LCORDOVA', PWDENCRYPT('123'))

-- COMANDO PARA INSERTAR CUANDO EL PRIMARY KEY ES IDENTITY.
INSERT INTO TA_USUARIO VALUES
('PABLO', '07757828', 'JPERALTA', PWDENCRYPT('L3P70N3$90'))


-- COMANDO PARA SELECCIONAR TODOS LOS REGISTROS DEL USUARIO.
SELECT * FROM TA_USUARIO

-- VALIDA QUE EL SEGUNDO CARACTER SEA LA LETRA 'U'
SELECT* FROM TA_USUARIO WHERE NOM_USUARIO LIKE '_U%'

-- COMANDO PARA ELIMINAR REGISTROS -- SI NO SE AGREGAN CONDICIONALES ELIMINA TODO
DELETE FROM TA_USUARIO

-- RESTAURAR TABLA . . . ELIMINA Y VUELVE A CREAR LA TABLA.  
TRUNCATE TABLE TA_USUARIO

--COMANDO PAR ELIMINAR UTILIZANDO CONDICIONALES
DELETE FROM TA_USUARIO WHERE TA_USUARIO.COD_USUARIO = 2

-- ACTUALIZAR INFORMACION DE UNA TABLA
UPDATE TA_USUARIO
SET
NOM_USUARIO = 'LILIANA',
DNI_USUARIO = '09600075'
WHERE COD_USUARIO = 3

INSERT INTO TA_ACCESOS (COD_USUARIO, NOM_ACCESO, FORMULARIO_ACCESO) VALUES (3, 'ACCESO AL MENU', 'FORMULARIO_MENU.JAVA')

--SELECT CON JOIN (BUSCA QUE LA CONDICION SERA EXACTA Y SOLO TRAE A LOS REGISTROS QUE CUMPLEN LA CONDICION)
SELECT 
	A.COD_ACCESO,
	A.FORMULARIO_ACCESO,
	A.NOM_ACCESO,
	U.DNI_USUARIO,
	U.NOM_USUARIO
FROM TA_ACCESOS A
INNER JOIN
TA_USUARIO U ON A.COD_USUARIO = U.COD_USUARIO


--SELECT CON RIGHT (BUSCA LOS REGISTROS DE LA TABLA POSICIONADA A LA DERECHA DE LA PALABRA 'RIGHT' EN ESTE EJEMPLO TA_USUARIOS Y MUESTRA LA INFORMACION DE ACCESOS SI LO ENCUENTRA)
SELECT 
	A.COD_ACCESO,
	A.FORMULARIO_ACCESO,
	A.NOM_ACCESO,
	U.DNI_USUARIO,
	U.NOM_USUARIO
FROM TA_ACCESOS A
RIGHT JOIN
TA_USUARIO U ON A.COD_USUARIO = U.COD_USUARIO

--SELECT CON LEFT (BUSCA LOS REGISTROS DE LA TABLA POSICIONADA A LA IZQUIERDA DE LA PALABRA 'LEFT' EN ESTE EJEMPLO TA_ACCESOS Y MUESTRA LA INFORMACION DE ACCESOS SI LO ENCUENTRA)
SELECT 
	A.COD_ACCESO,
	A.FORMULARIO_ACCESO,
	A.NOM_ACCESO,
	U.DNI_USUARIO,
	U.NOM_USUARIO
FROM TA_ACCESOS A
LEFT JOIN
TA_USUARIO U ON A.COD_USUARIO = U.COD_USUARIO

-- VISTAS EN SQL SERVER.
CREATE VIEW VW_USUARIOS_ACCESOS
AS
SELECT 
	A.COD_ACCESO,
	A.FORMULARIO_ACCESO,
	A.NOM_ACCESO,
	U.DNI_USUARIO,
	U.NOM_USUARIO
FROM TA_ACCESOS A
INNER JOIN
TA_USUARIO U ON A.COD_USUARIO = U.COD_USUARIO

--UTILIZAMOS LA VISTA COMO UNA NUEVA TABLA
SELECT * FROM VW_USUARIOS_ACCESOS